//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.296
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CaveVins.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CaveVins.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à /*==============================================================*/
        ////* Nom de SGBD :  Microsoft SQL Server 2008                     */
        ////* Date de création :  05/11/2012 14:51:13                      */
        ////*==============================================================*/
        ///Use master
        ///GO
        ///create Database Cave_Vins
        ///GO
        ///Use Cave_Vins
        ///GO
        ///
        ///if exists (select 1
        ///   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = &apos;F&apos;)
        ///   where r.fkeyid = object_id(&apos;T_APPELLATION_APT&apos;) and o.name [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string CreerBase {
            get {
                return ResourceManager.GetString("CreerBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à USE [Cave_Vins]
        ///GO
        ////****** Object:  StoredProcedure [dbo].[NbEmplacementsOQPSaufIdBtl]    Script Date: 03/03/2013 13:26:36 ******/
        ///SET ANSI_NULLS ON
        ///GO
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///-- =============================================
        ///-- Author:		Jean Traullé
        ///-- Create date: 09/02/2013
        ///-- Description:	Procédure permettant de retourner le nombre d&apos;emplacements qui possèdent une ou des bouteilles ayant un id différent de celui passé en paramètre
        ///-- =============================================
        ///CREATE PR [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string proceduresStockees {
            get {
                return ResourceManager.GetString("proceduresStockees", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à -- On nettoie les données précédentes
        ///DELETE FROM T_BOUTEILLE_BTL
        ///DELETE FROM T_COULEUR_CLR
        ///DELETE FROM T_FLACONNAGE_FCG
        ///DELETE FROM T_CHATEAU_CHT
        ///DELETE FROM T_APPELLATION_APT
        ///DELETE FROM T_REGION_REG
        ///DELETE FROM T_PAYS_PAY
        ///
        ///
        ///-- On insert les données
        ///INSERT INTO T_PAYS_PAY (PAY_C_CODE, PAY_S_NOM) VALUES(&apos;FRA&apos;,&apos;France&apos;)
        ///INSERT INTO T_PAYS_PAY (PAY_C_CODE, PAY_S_NOM) VALUES(&apos;ITA&apos;,&apos;Italie&apos;)
        ///INSERT INTO T_PAYS_PAY (PAY_C_CODE, PAY_S_NOM) VALUES(&apos;ESP&apos;,&apos;Espagne&apos;)
        ///INSERT INTO T_PAYS_PAY (PAY_C_CODE, [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string SampleData {
            get {
                return ResourceManager.GetString("SampleData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à -- On nettoie les données précédentes
        ///ALTER DATABASE Cave_Vins SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
        ///DROP DATABASE Cave_Vins;
        ///.
        /// </summary>
        internal static string SupprimerBase {
            get {
                return ResourceManager.GetString("SupprimerBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à USE [Cave_Vins]
        ///GO
        ///
        ////****** Object:  Table [dbo].[T_EMPLACEMENT_EMP]    Script Date: 01/31/2013 20:25:54 ******/
        ///SET ANSI_NULLS ON
        ///GO
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///CREATE TABLE [dbo].[T_EMPLACEMENT_EMP](
        ///	[EMP_I_ID] [bigint] NOT NULL,
        ///	[LIE_I_ID] [bigint] NULL,
        ///	[EMP_I_POSH] [int] NULL,
        ///	[EMP_I_POSV] [int] NULL,
        /// CONSTRAINT [PK_T_EMPLACEMENT_EMP] PRIMARY KEY CLUSTERED 
        ///(
        ///	[EMP_I_ID] ASC
        ///)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALL [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string T_EMPLACEMENT_EMP {
            get {
                return ResourceManager.GetString("T_EMPLACEMENT_EMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à USE [Cave_Vins]
        ///GO
        ///
        ////****** Object:  Table [dbo].[T_INVENTAIRE_INV]    Script Date: 01/26/2013 17:22:25 ******/
        ///SET ANSI_NULLS ON
        ///GO
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///CREATE TABLE [dbo].[T_INVENTAIRE_INV](
        ///	[BTL_I_ID] [bigint] NOT NULL,
        ///	[INV_I_NB] [int] NOT NULL,
        /// CONSTRAINT [PK_T_INVENTAIRE_INV] PRIMARY KEY CLUSTERED 
        ///(
        ///	[BTL_I_ID] ASC
        ///)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
        ///) ON [PRIMARY]
        ///
        ///GO        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string T_INVENTAIRE_INV {
            get {
                return ResourceManager.GetString("T_INVENTAIRE_INV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à USE [Cave_Vins]
        ///GO
        ///
        ////****** Object:  Table [dbo].[T_LIEU_LIE]    Script Date: 01/31/2013 20:21:07 ******/
        ///SET ANSI_NULLS ON
        ///GO
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///SET ANSI_PADDING ON
        ///GO
        ///
        ///CREATE TABLE [dbo].[T_LIEU_LIE](
        ///	[LIE_I_ID] [bigint] NOT NULL,
        ///	[LIE_S_NOM] [varchar](150) NOT NULL,
        ///	[LIE_I_NBHOR] [int] NOT NULL,
        ///	[LIE_I_NBVERT] [int] NOT NULL,
        ///	[LIE_I_CAPA] [int] NOT NULL,
        ///	[LIE_C_TYPE] [char](10) NOT NULL,
        /// CONSTRAINT [PK_T_LIEU_LIE] PRIMARY KEY CLUSTERED 
        ///(
        ///	[LIE_I_ID] ASC
        ///)WITH (PA [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string T_LIEU_LIE {
            get {
                return ResourceManager.GetString("T_LIEU_LIE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à USE [Cave_Vins]
        ///GO
        ///
        ////****** Object:  Table [dbo].[T_STOCKAGE_STO]    Script Date: 01/31/2013 21:23:58 ******/
        ///SET ANSI_NULLS ON
        ///GO
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///CREATE TABLE [dbo].[T_STOCKAGE_STO](
        ///	[STO_I_ID] [bigint] NOT NULL,
        ///	[STO_I_TYPE] [int] NOT NULL,
        ///	[BTL_I_ID] [bigint] NOT NULL,
        ///	[EMP_I_ID] [bigint] NOT NULL,
        ///	[STO_I_QTE] [int] NOT NULL,
        ///	[STO_I_PLACE] [int] NULL,
        /// CONSTRAINT [PK_T_STOCKAGE_STO] PRIMARY KEY CLUSTERED 
        ///(
        ///	[STO_I_ID] ASC
        ///)WITH (PAD_INDEX  = OFF, STATISTICS_NORECO [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string T_STOCKAGE_STO {
            get {
                return ResourceManager.GetString("T_STOCKAGE_STO", resourceCulture);
            }
        }
    }
}
